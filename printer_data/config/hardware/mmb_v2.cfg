# This file contains common pin mappings for the BIGTREETECH MMBCan V2.0
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PD0/PD1)".
# The "MMB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

#[mcu MMB]
#serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_2200300010504D5930363820-if00
#canbus_uuid: 0e0d81e4210c

[board_pins mmb]
mcu: MMB # Assumes using an external / extra mcu dedicated to MMU
aliases:
    MMU_GEAR_UART={gear_uart_pin},
    MMU_GEAR_STEP=PD4,
    MMU_GEAR_DIR={gear_dir_pin},
    MMU_GEAR_ENABLE={gear_enable_pin},
    MMU_GEAR_DIAG={gear_diag_pin},

    MMU_GEAR_UART_1={gear_1_uart_pin},
    MMU_GEAR_STEP_1={gear_1_step_pin},
    MMU_GEAR_DIR_1={gear_1_dir_pin},
    MMU_GEAR_ENABLE_1={gear_1_enable_pin},
    MMU_GEAR_DIAG_1={gear_1_diag_pin},

    MMU_GEAR_UART_2={gear_2_uart_pin},
    MMU_GEAR_STEP_2={gear_2_step_pin},
    MMU_GEAR_DIR_2={gear_2_dir_pin},
    MMU_GEAR_ENABLE_2={gear_2_enable_pin},
    MMU_GEAR_DIAG_2={gear_2_diag_pin},

    MMU_GEAR_UART_3={gear_3_uart_pin},
    MMU_GEAR_STEP_3={gear_3_step_pin},
    MMU_GEAR_DIR_3={gear_3_dir_pin},
    MMU_GEAR_ENABLE_3={gear_3_enable_pin},
    MMU_GEAR_DIAG_3={gear_3_diag_pin},

    MMU_SEL_UART={selector_uart_pin},
    MMU_SEL_STEP={selector_step_pin},
    MMU_SEL_DIR={selector_dir_pin},
    MMU_SEL_ENABLE={selector_enable_pin},
    MMU_SEL_DIAG={selector_diag_pin},
    MMU_SEL_ENDSTOP={selector_endstop_pin},
    MMU_SEL_SERVO={selector_servo_pin},

    MMU_ENCODER={encoder_pin},
    MMU_GATE_SENSOR={gate_sensor_pin},
    MMU_NEOPIXEL={neopixel_pin},

    MMU_PRE_GATE_0={pre_gate_0_pin},
    MMU_PRE_GATE_1={pre_gate_1_pin},
    MMU_PRE_GATE_2={pre_gate_2_pin},
    MMU_PRE_GATE_3={pre_gate_3_pin},
    MMU_PRE_GATE_4={pre_gate_4_pin},
    MMU_PRE_GATE_5={pre_gate_5_pin},
    MMU_PRE_GATE_6={pre_gate_6_pin},
    MMU_PRE_GATE_7={pre_gate_7_pin},
    MMU_PRE_GATE_8={pre_gate_8_pin},
    MMU_PRE_GATE_9={pre_gate_9_pin},
    MMU_PRE_GATE_10={pre_gate_10_pin},
    MMU_PRE_GATE_11={pre_gate_11_pin},

    MMU_POST_GEAR_0={gear_sensor_0_pin},
    MMU_POST_GEAR_1={gear_sensor_1_pin},
    MMU_POST_GEAR_2={gear_sensor_2_pin},
    MMU_POST_GEAR_3={gear_sensor_3_pin},
    MMU_POST_GEAR_4={gear_sensor_4_pin},
    MMU_POST_GEAR_5={gear_sensor_5_pin},
    MMU_POST_GEAR_6={gear_sensor_6_pin},
    MMU_POST_GEAR_7={gear_sensor_7_pin},
    MMU_POST_GEAR_8={gear_sensor_8_pin},
    MMU_POST_GEAR_9={gear_sensor_9_pin},
    MMU_POST_GEAR_10={gear_sensor_10_pin},
    MMU_POST_GEAR_11={gear_sensor_11_pin},

    MMU_ESPOOLER_RWD_0={espooler_rwd_0_pin},
    MMU_ESPOOLER_FWD_0={espooler_fwd_0_pin},
    MMU_ESPOOLER_EN_0={espooler_en_0_pin},
    MMU_ESPOOLER_TRIG_0=,
    MMU_ESPOOLER_RWD_1={espooler_rwd_1_pin},
    MMU_ESPOOLER_FWD_1={espooler_fwd_1_pin},
    MMU_ESPOOLER_EN_1={espooler_en_1_pin},
    MMU_ESPOOLER_TRIG_1=,
    MMU_ESPOOLER_RWD_2={espooler_rwd_2_pin},
    MMU_ESPOOLER_FWD_2={espooler_fwd_2_pin},
    MMU_ESPOOLER_EN_2={espooler_en_2_pin},
    MMU_ESPOOLER_TRIG_2=,
    MMU_ESPOOLER_RWD_3={espooler_rwd_3_pin},
    MMU_ESPOOLER_FWD_3={espooler_fwd_3_pin},
    MMU_ESPOOLER_EN_3={espooler_en_3_pin},
    MMU_ESPOOLER_TRIG_3=,

# EZ Driver1
[ez_driver1]
step_pin: MMB:PD4
dir_pin: MMB:PD3
enable_pin: !MMB:PD5
microsteps: 16
rotation_distance: 40

# EZ Driver2
[ez_driver2]
step_pin: MMB:PC9
dir_pin: MMB:PC8
enable_pin: !MMB:PD2
microsteps: 16
rotation_distance: 40

# EZ Driver3
[ez_driver3]
step_pin: MMB:PC15
dir_pin: MMB:PC11
enable_pin: !MMB:PC10
microsteps: 16
rotation_distance: 40

# EZ Driver4
[ez_driver4]
step_pin: MMB:PC13
dir_pin: MMB:PC12
enable_pin: !MMB:PC14
microsteps: 16
rotation_distance: 40

#i2c_bus: i2c3_PC0_PC1

#[servo my_servo1]
#pin: MMB:PA1

#[servo my_servo2]
#pin: MMB:PA0

#[gcode_button sensor]
#pin: MMB:PC2

#[neopixel mmb_neopixel]
#pin: MMB:PC3

#[gcode_button endstop1]
#pin: MMB:PA15

#[gcode_button endstop2]
#pin: MMB:PA10

#[gcode_button endstop3]
#pin: MMB:PD9

#[gcode_button endstop4]
#pin: MMB:PD8


########################################
# 2*7 pin header
########################################

#[gcode_button in_h_0]
#pin: MMB:PC7

#[gcode_button in_h_1]
#pin: MMB:PA9

#[gcode_button in_h_2]
#pin: MMB:PB12

#[gcode_button in_h_3]
#pin: MMB:PB10

#[gcode_button in_h_4]
#pin: MMB:PB1

#[gcode_button in_h_5]
#pin: MMB:PC5

#[gcode_button in_l_0]
#pin: MMB:PC6

#[gcode_button in_l_1]
#pin: MMB:PA8

#[gcode_button in_l_2]
#pin: MMB:PB11

#[gcode_button in_l_3]
#pin: MMB:PB2

#[gcode_button in_l_4]
#pin: MMB:PB0

#[gcode_button in_l_5]
#pin: MMB:PC4

########################################
# TMC2209 configuration
########################################

[tmc2209 ez_driver1]
uart_pin: MMB:PB5
diag_pin: MMB:PB9
run_current: 0.800
stealthchop_threshold: 999999
sense_resistor: 0.110

[tmc2209 ez_driver2]
uart_pin: MMB:PB4
diag_pin: MMB:PB8
run_current: 0.800
stealthchop_threshold: 999999
sense_resistor: 0.110

#[tmc2209 ez_driver3]
#uart_pin: MMB:PB3
##diag_pin: MMB:PB7
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 ez_driver4]
#uart_pin: MMB:PD6
##diag_pin: MMB:PB6
#run_current: 0.800
#stealthchop_threshold: 999999


