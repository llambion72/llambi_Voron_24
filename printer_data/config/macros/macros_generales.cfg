#
# Macros de uso general
# Print_START, PRINT_END, PAUSE, RESUME, LOAD_FILAMENT, UNLOAD_FILAMENT
#
#####################################################################
#   print_start macro
#####################################################################

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  #{% set target_bed = params.BED|int %}
  {% set bed_temp = params.BED|default(50)|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("25")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
  {% set FILAMENT_TYPE = params.FILAMENT|default(PLA)|string %}

  #Tiempo de chequeo para el Timelapse
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
  SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=check_time VALUE=0.5 

  SET_GCODE_VARIABLE MACRO=configvars VARIABLE=is_printing VALUE=True

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  STATUS_HOMING        # Sets SB-leds to homing-mode
  G28.1                # Full home (XYZ)
  G90                  # Absolut position

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
  M109 S150                                    # Heats the nozzle to 150c

  #Clean Nozzle
  #CLEAN_NOZZLE

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="QGL"      # Displays info
  STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  _CQGL
 

  ##  Carga la cama en funcion de la temperatura del material     
    {% if bed_temp == 105 %}
        BED_MESH_PROFILE LOAD="100grados"
        RESPOND TYPE=COMMAND MSG="100grados mesh loaded"
        SET_DISPLAY_TEXT MSG="100grados mesh loaded" 
    {% elif bed_temp == 80 %}
        BED_MESH_PROFILE LOAD="80grados"
        RESPOND TYPE=COMMAND MSG="80grados mesh loaded"
        SET_DISPLAY_TEXT MSG="80grados mesh loaded" 
    {% elif bed_temp <= 80 %}
        BED_MESH_PROFILE LOAD="60grados"
        RESPOND TYPE=COMMAND MSG="60grados mesh loaded"
        SET_DISPLAY_TEXT MSG="60grados mesh loaded" 
    {% endif %}

  #BED_MESH_CALIBRATE                ; Calibrate the bed mesh
  #CARTOGRAPHER_TOUCH                ; Perform touch probe

  SET_FAN_SPEED FAN=pi_fan SPEED=0.8


  ##  Fire up fans if print ABS or ASA Nevermore.
	{% if FILAMENT_TYPE == "ABS" or FILAMENT_TYPE == "ASA" %}
        # filters fans
	    SET_FAN_SPEED FAN=nevermore_fan SPEED=0.8
        SET_FAN_SPEED FAN=thefilter_left_fan SPEED=0.8
        SET_FAN_SPEED FAN=thefilter_right_fan SPEED=0.8
        SET_FAN_SPEED FAN=thefilter_HEPA_fan SPEED=0.8

        # electronics fans
        SET_FAN_SPEED FAN=controller_fan_out SPEED=0.5
        SET_FAN_SPEED FAN=controller_fan SPEED=0.4

    {% else %}

        M118 {FILAMENT_TYPE}, desactivo el contador de los filtros
        DISABLE_MAINTENANCE NAME=nevermore
        DISABLE_MAINTENANCE NAME=the_filters
        DISABLE_MAINTENANCE NAME=the_filter_hepa

	{% endif %}

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {bed_temp}c"                 # Displays info
    STATUS_HEATING TEMP={bed_temp}                          # Sets SB-leds to heating-mode
    M106 S255                                               # Turns on the PT-fan

    G1 X{x_wait} Y{y_wait} Z15 F9000                        # Goes to center of the bed
    M190 S{bed_temp}                                        # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"      # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 3min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {bed_temp}c"           # Displays info
    STATUS_HEATING TEMP={bed_temp}                    # Sets SB-leds to heating-mode
#    bed_led_heating
    G1 X{x_wait} Y{y_wait} Z15 F9000                  # Goes to center of the bed
    M190 S{bed_temp}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Precalentado 3min"          # Displays info
    G4 P180000                                        # Waits 3 min for the bedtemp to stabilize
  {% endif %}

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  STATUS_HEATING_TOOLHEAD TOOLHEAD={target_extruder}            # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp

  # Gets ready to print by doing a purge line and updating the SB-leds
  SET_DISPLAY_TEXT MSG="Imprimiendo"               # Displays info
  STATUS_PRINTING                                  # Sets SB-leds to printing-mode
  #SET_CHAMBER_WHITE                                # Light On chamber Leds
  #status_printing_hotkey
  _HOTKEY_SET_CURRENT_STATE             #Apago botones cuando empiezo a imprimir
  #Clean Nozzle to clean ozzing
  CLEAN_NOZZLE

   ; Prime line
  G1 X10.0 Y2.0 F18000          ; go to edge of bed
  G1 Z0.2 F5000                 ; lower nozzle
  G92 E0.0                      ; reset extruder position
  G1 X250.0 E32.0 F1000.0       ; start intro line
  G1 X50.0 E32.0 F1000.0        ; Second line
  G92 E0.0
  G90                           ; Absolut position
 
  #Activo el  sensor de filamento
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                                          


#---------------------------------------------------------------------------------------------------
#     Macro de fin de impresión 
#---------------------------------------------------------------------------------------------------   
[gcode_macro PRINT_END]
description: ending script
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    {% set EndRetract = printer["gcode_macro configvars"].endretract|float %}
    {% set FILAMENT_TYPE = params.FILAMENT|default(PLA)|string %}

    M400                           ; wait for buffer to clear
    
    M118 Retrayendo filamento {EndRetract}mm

    G92 E0                         ; zero the extruder
    G1 Z10 F3000                   ; move nozzle up 2mm
    G1 E3  F300                    # extrude slowly to soften tip of filament
    G1 E-30 F100000                # quickly yank filament back clear of hotend
    G1 E-{EndRetract} F1800        # ensure filament is clear of extruder gears
    G91                            ; relative positioning
    G0 Z5.00 X20.0 Y20.0 F10000    ; move nozzle to remove stringing

   TURN_OFF_HEATERS

   #M118 Filtros
   #M118 {FILAMENT_TYPE}

	{% if FILAMENT_TYPE == "ABS" or FILAMENT_TYPE == "ASA" %}

        #Clean VOCs
        M118 Limpiando VOCs durante 10 minutos
        CLEAN_AIR MINUTES=10
        M118 Limpieza de VOCs finalizada
    {% else %}
        #Activo el mantenimiento de los filtros otra vez
        M118 {FILAMENT_TYPE}, reactivo el contador de los filtros
        ENABLE_MAINTENANCE NAME=nevermore
        ENABLE_MAINTENANCE NAME=the_filters
        ENABLE_MAINTENANCE NAME=the_filter_hepa

	{% endif %} 

    # turn off all fans

    #M118 Paro filtros

    # filters fans
	SET_FAN_SPEED FAN=nevermore_fan SPEED=0
    SET_FAN_SPEED FAN=thefilter_left_fan SPEED=0
    SET_FAN_SPEED FAN=thefilter_right_fan SPEED=0
    SET_FAN_SPEED FAN=thefilter_HEPA_fan SPEED=0

    # electronics fans
    SET_FAN_SPEED FAN=controller_fan_out SPEED=0
    SET_FAN_SPEED FAN=controller_fan SPEED=0

    #pi fan
    SET_FAN_SPEED FAN=pi_fan SPEED=0.4

    #M118 Acabo

    M107                           ; turn off fan
    #G1 Z10 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G28 X Y  #G0  X125 Y250 F3600  ; park nozzle at rear
    BED_MESH_CLEAR

    
    
    # Cambio leds a situacion inicial
    SET_GCODE_VARIABLE MACRO=configvars VARIABLE=is_printing VALUE=False        
    STATUS_READY
    _HOTKEY_SET_CURRENT_STATE
    #HOTKEY_INITIAL_COLORS

    #M117 Impresión Finalizada, chequea el nozzle.
    M118 Impresión Finalizada, chequea el nozzle.
    BEEP
    BEEP

[gcode_macro CANCEL_PRINT]  # Cancelar Impresion
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    G91
    G1 Z+5 F600
    G90
    TURN_OFF_HEATERS
    CLEAR_PAUSE

	{% if FILAMENT_TYPE == "ABS" or FILAMENT_TYPE == "ASA" %}
      #Clean VOCs
      CLEAN_AIR MINUTES=10
	{% endif %}

    #SFS_DISABLE                     ; Disable filament detector
    #SDCARD_RESET_FILE

    SET_GCODE_VARIABLE MACRO=configvars VARIABLE=is_printing VALUE=False
    STATUS_READY
    _HOTKEY_SET_CURRENT_STATE
    CANCEL_PRINT_BASE


[gcode_macro PAUSE]#暂停打印
rename_existing: BASE_PAUSE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(150) %}      #edit to your park position
    {% set y = params.Y|default(295) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####

    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{e} F2100
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F6000 

    SET_IDLE_TIMEOUT TIMEOUT=43200 
    
[gcode_macro RESUME]   #恢复打印
rename_existing: BASE_RESUME
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    G91
    G1 E{e} F2100
    G90

    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}

    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1

    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1

    BASE_RESUME   

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state  

## safety firster
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: _BED_MESH_CALIBRATE
description: Perform Mesh Bed Leveling if the printer is leveled, if not level the printer
gcode:
  {% if printer.configfile.settings.quad_gantry_level is defined and not printer.quad_gantry_level.applied %} 
    status_leveling
    QUAD_GANTRY_LEVEL
    G28.1 Z
  {% endif %}
  status_meshing
  _BED_MESH_CALIBRATE {rawparams}   

[gcode_macro PROBE_CALIBRATE]
gcode:
    status_leveling
    CARTOGRAPHER_CALIBRATE   